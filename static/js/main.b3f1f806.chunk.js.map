{"version":3,"sources":["App.js","index.js"],"names":["types","name","value","App","useState","robohash","setRobohash","currType","setCurrType","imageURL","setImageURL","isLoaded","setIsLoaded","url","fetchImage","a","axios","get","status","useEffect","window","addEventListener","e","which","className","type","onChange","target","printPicture","placeholder","disabled","map","onClick","toastr","warning","onGenerate","role","src","alt","href","rel","rootElement","document","getElementById","ReactDOM","render"],"mappings":"4OAKMA,EAAQ,CACZ,CAAEC,KAAM,QAASC,MAAO,GACxB,CAAED,KAAM,QAASC,MAAO,GACxB,CAAED,KAAM,aAAcC,MAAO,GAC7B,CAAED,KAAM,MAAOC,MAAO,IAGT,SAASC,IACtB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAgCN,oBAAS,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KAEMC,EAAG,+BAA2BR,EAA3B,uBAAkDE,GAN/B,SAQbO,IARa,2EAQ5B,8BAAAC,EAAA,6DACEH,GAAY,GADd,SAE2BI,IAAMC,IAAIJ,GAFrC,gBAEUK,EAFV,EAEUA,OACRN,EAAuB,MAAXM,GAHd,4CAR4B,sBAc5BC,qBAAU,WACRC,OAAOC,iBAAiB,YAAY,SAACC,GACnB,KAAZA,EAAEC,OAAgBhB,IACpBO,IACAJ,EAAY,wBAAD,OAAyBL,EAAzB,uBAAgDE,UAG9D,CAACF,EAAUE,EAAUE,IAyBxB,OACE,sBAAKe,UAAU,MAAf,UACE,0CACA,sEACA,sBAAKA,UAAU,OAAf,UACE,uBACEC,KAAK,OACLC,SAAU,SAACJ,GAAD,OA9BG,SAACA,GACpBhB,EAAYgB,EAAEK,OAAOzB,OA6BE0B,CAAaN,IAC9BO,YAAY,kCAGd,yBAAQ3B,MAAOK,EAAUmB,SA9B/B,SAAwBJ,GACtBd,EAAYc,EAAEK,OAAOzB,OACjBoB,EAAEK,OAAOzB,QAAUK,GACrBG,EAAYG,IA2BV,UACE,wBAAQX,MAAO,EAAG4B,UAAQ,EAA1B,wCAGC9B,EAAM+B,KAAI,SAACN,GACV,OACE,wBAAyBvB,MAAOuB,EAAKvB,MAArC,SACGuB,EAAKxB,MADKwB,EAAKvB,aAOxB,yBAAQ8B,QAAS,kBApCvB,SAAoBnB,GAClBD,GAAY,GACRL,GAAYF,GACdS,IACAJ,EAAYG,IACFN,EAEAF,GACV4B,IAAOC,QAAQ,gBAFfD,IAAOC,QAAQ,4BA8BUC,CAAWtB,IAAlC,qBACW,IACT,sBAAM,aAAW,QAAQuB,KAAK,MAA9B,gCAKHzB,EACC,qCACE,qBAAKa,UAAU,eACf,qBAAKa,IAAK5B,EAAU6B,IAAKjC,OAG3B,wBAEF,qBAAKmB,UAAU,SACf,qDACkB,IAChB,sBAAM,aAAW,QAAQY,KAAK,MAA9B,0BAEQ,IAJV,eAKe,IACb,mBAAGG,KAAK,uBAAuBZ,OAAO,SAASa,IAAI,aAAnD,0BANF,IAUE,uBAVF,cAUoB,IAClB,mBACED,KAAK,iCACLZ,OAAO,SACPa,IAAI,aAHN,wBAMK,IAjBP,UC7FN,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC1C,EAAD,MAEFsC,K","file":"static/js/main.b3f1f806.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport toastr from \"toastr\";\nimport \"./styles.css\";\n\nconst types = [\n  { name: \"Robot\", value: 1 },\n  { name: \"Alien\", value: 2 },\n  { name: \"Robot Head\", value: 3 },\n  { name: \"Cat\", value: 4 }\n];\n\nexport default function App() {\n  const [robohash, setRobohash] = useState(\"\");\n  const [currType, setCurrType] = useState(0);\n  const [imageURL, setImageURL] = useState(\"\");\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const url = `https://robohash.org/${robohash}.png?set=set${currType}`;\n\n  async function fetchImage() {\n    setIsLoaded(false);\n    const { status } = await axios.get(url);\n    setIsLoaded(status === 200);\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"keypress\", (e) => {\n      if (e.which === 13 && currType) {\n        fetchImage();\n        setImageURL(`https://robohash.org/${robohash}.png?set=set${currType}`);\n      }\n    });\n  }, [robohash, currType, imageURL]);\n\n  const printPicture = (e) => {\n    setRobohash(e.target.value);\n  };\n\n  function onOptionChange(e) {\n    setCurrType(e.target.value);\n    if (e.target.value === currType) {\n      setImageURL(url);\n    }\n  }\n\n  function onGenerate(url) {\n    setIsLoaded(false);\n    if (currType && robohash) {\n      fetchImage();\n      setImageURL(url);\n    } else if (!currType) {\n      toastr.warning(\"You didn't select a type\");\n    } else if (!robohash) {\n      toastr.warning(\"Enter a text\");\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>RoboHash</h1>\n      <h2>GENERATE UNIQUE IMAGES FROM ANY TEXT</h2>\n      <div className=\"form\">\n        <input\n          type=\"text\"\n          onChange={(e) => printPicture(e)}\n          placeholder=\"Enter any text here... âœŽ\"\n        />\n\n        <select value={currType} onChange={onOptionChange}>\n          <option value={0} disabled>\n            Select a Type ðŸ‘ˆ\n          </option>\n          {types.map((type) => {\n            return (\n              <option key={type.value} value={type.value}>\n                {type.name}\n              </option>\n            );\n          })}\n        </select>\n\n        <button onClick={() => onGenerate(url)}>\n          Generate{\" \"}\n          <span aria-label=\"robot\" role=\"img\">\n            ðŸ¤–\n          </span>\n        </button>\n      </div>\n      {isLoaded ? (\n        <>\n          <div className=\"background\"></div>\n          <img src={imageURL} alt={robohash} />\n        </>\n      ) : (\n        <div></div>\n      )}\n      <div className=\"void\"></div>\n      <footer>\n        Robots lovingly{\" \"}\n        <span aria-label=\"heart\" role=\"img\">\n          ðŸ–¤\n        </span>{\" \"}\n        delivered by{\" \"}\n        <a href=\"https://robohash.org\" target=\"_blank\" rel=\"noreferrer\">\n          Robohash.org\n        </a>\n        .\n        <br /> Created by{\" \"}\n        <a\n          href=\"https://github.com/skotancilar\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          kotancilar\n        </a>{\" \"}\n        .\n      </footer>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}