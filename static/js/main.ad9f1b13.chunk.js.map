{"version":3,"sources":["App.js","index.js"],"names":["types","name","value","emoji","App","robohash","setRobohash","useState","currType","setCurrType","imageURL","setImageURL","isLoaded","setIsLoaded","loading","setLoading","error","setError","url","useEffect","request","axios","CancelToken","source","async","status","get","cancelToken","token","err","console","log","fetchPost","cancel","className","onSubmit","e","preventDefault","toastr","warning","type","onChange","target","placeholder","disabled","map","style","display","alignItems","marginLeft","color","size","role","filter","src","alt","href","rel","rootElement","document","getElementById","ReactDOM","render"],"mappings":"6NAMA,MAAMA,EAAQ,CACZ,CAAEC,KAAM,QAASC,MAAO,EAAGC,MAAO,gBAClC,CAAEF,KAAM,QAASC,MAAO,EAAGC,MAAO,gBAClC,CAAEF,KAAM,aAAcC,MAAO,EAAGC,MAAO,gBACvC,CAAEF,KAAM,MAAOC,MAAO,EAAGC,MAAO,iBAGnB,SAASC,IAAO,IAAD,EAC5B,MAAOC,EAAUC,GAAeC,mBAAS,KAClCC,EAAUC,GAAeF,mBAAS,IAClCG,EAAUC,GAAeJ,mBAAS,KAClCK,EAAUC,GAAeN,oBAAS,IAClCO,EAASC,GAAcR,oBAAS,IAChCS,EAAOC,GAAYV,oBAAS,GAE7BW,EAAG,+BAA2Bb,EAA3B,uBAAkDG,GAuC3D,OArCAW,qBAAU,KACR,MAAMC,EAAUC,IAAMC,YAAYC,SAsBlC,OALIlB,IAfcmB,WAChB,IACEX,GAAY,GACZE,GAAW,GACXE,GAAS,GACT,MAAM,OAAEQ,SAAiBJ,IAAMK,IAAIR,EAAK,CACtCS,YAAaP,EAAQQ,QAEvBf,EAAuB,MAAXY,GACZR,EAAoB,MAAXQ,GACTV,GAAW,GACX,MAAOc,GACPC,QAAQC,IAAI,mDAIdC,GACArB,EAAYO,IAGP,IAAME,EAAQa,WACpB,CAACzB,IAcF,sBAAK0B,UAAU,MAAf,UACE,0CACA,sEACA,uBAAMC,SAfV,SAAoBC,GAClBA,EAAEC,iBACE7B,GAAYH,EACdM,EAAYO,GACFV,EAEAH,GACViC,IAAOC,QAAQ,gBAFfD,IAAOC,QAAQ,6BAUaL,UAAU,OAAtC,UACE,uBACEM,KAAK,OACLC,SAAWL,GAAM9B,EAAY8B,EAAEM,OAAOxC,OACtCyC,YAAY,kCAGd,yBAAQzC,MAAOM,EAAUiC,SAAWL,GAAM3B,EAAY2B,EAAEM,OAAOxC,OAA/D,UACE,wBAAQA,MAAO,EAAG0C,UAAQ,EAA1B,6CAGC5C,EAAM6C,KAAKL,GAER,wBAAyBtC,MAAOsC,EAAKtC,MAArC,SACGsC,EAAKvC,MADKuC,EAAKtC,YAOxB,yBAAQsC,KAAK,SAAb,0BAEG1B,EACC,sBACEgC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,WAAY,OAJhB,SAOE,cAAC,IAAD,CAAYC,MAAM,UAAUpC,QAASA,EAASqC,KAAM,OAGtD,sBAAM,aAAW,QAAQC,KAAK,MAA9B,mBACGpD,EAAMqD,QAAQb,GAASA,EAAKtC,SAAWM,IAAU,UADpD,aACG,EAAqDL,cAK7DS,IAAaI,EACZ,qCACE,qBAAKkB,UAAU,eACf,qBAAKoB,IAAK5C,EAAU6C,IAAKlD,EAAUS,QAAQ,YAE3CF,GAAYI,EACd,qBAAKkB,UAAU,QAAf,qCAEA,wBAEF,qBAAKA,UAAU,SACf,qDACkB,IAChB,sBAAM,aAAW,QAAQkB,KAAK,MAA9B,0BAEQ,IAJV,eAKe,IACb,mBAAGI,KAAK,uBAAuBd,OAAO,SAASe,IAAI,aAAnD,0BANF,IAUE,uBAVF,cAUoB,IAClB,mBACED,KAAK,iCACLd,OAAO,SACPe,IAAI,aAHN,wBAMK,IAjBP,UC7GN,MAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC1D,EAAD,MAEFsD,K","file":"static/js/main.ad9f1b13.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport toastr from \"toastr\";\nimport \"./styles.css\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst types = [\n  { name: \"Robot\", value: 1, emoji: \"🤖\" },\n  { name: \"Alien\", value: 2, emoji: \"👽\" },\n  { name: \"Robot Head\", value: 3, emoji: \"🤖\" },\n  { name: \"Cat\", value: 4, emoji: \"🐱\" }\n];\n\nexport default function App() {\n  const [robohash, setRobohash] = useState(\"\");\n  const [currType, setCurrType] = useState(0);\n  const [imageURL, setImageURL] = useState(\"\");\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const url = `https://robohash.org/${robohash}.png?set=set${currType}`;\n\n  useEffect(() => {\n    const request = axios.CancelToken.source();\n\n    const fetchPost = async () => {\n      try {\n        setIsLoaded(false);\n        setLoading(true);\n        setError(false);\n        const { status } = await axios.get(url, {\n          cancelToken: request.token\n        });\n        setIsLoaded(status === 200);\n        setError(status !== 200);\n        setLoading(false);\n      } catch (err) {\n        console.log(\"There was a problem or request was cancelled.\");\n      }\n    };\n    if (robohash) {\n      fetchPost();\n      setImageURL(url);\n    }\n\n    return () => request.cancel();\n  }, [currType]);\n\n  function onGenerate(e) {\n    e.preventDefault();\n    if (currType && robohash) {\n      setImageURL(url);\n    } else if (!currType) {\n      toastr.warning(\"You didn't select a type\");\n    } else if (!robohash) {\n      toastr.warning(\"Enter a text\");\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>RoboHash</h1>\n      <h2>GENERATE UNIQUE IMAGES FROM ANY TEXT</h2>\n      <form onSubmit={onGenerate} className=\"form\">\n        <input\n          type=\"text\"\n          onChange={(e) => setRobohash(e.target.value)}\n          placeholder=\"Enter any text here... ✎\"\n        />\n\n        <select value={currType} onChange={(e) => setCurrType(e.target.value)}>\n          <option value={0} disabled>\n            Select a Type &nbsp; 👈\n          </option>\n          {types.map((type) => {\n            return (\n              <option key={type.value} value={type.value}>\n                {type.name}\n              </option>\n            );\n          })}\n        </select>\n\n        <button type=\"submit\">\n          Generate &nbsp;\n          {loading ? (\n            <span\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                marginLeft: \"6px\"\n              }}\n            >\n              <ClipLoader color=\"#13aeb1\" loading={loading} size={20} />\n            </span>\n          ) : (\n            <span aria-label=\"robot\" role=\"img\">\n              {types.filter((type) => type.value === +currType)[0]?.emoji}\n            </span>\n          )}\n        </button>\n      </form>\n      {isLoaded && !error ? (\n        <>\n          <div className=\"background\"></div>\n          <img src={imageURL} alt={robohash} loading=\"lazy\" />\n        </>\n      ) : isLoaded && error ? (\n        <div className=\"error\"> Something Went Wrong! </div>\n      ) : (\n        <div></div>\n      )}\n      <div className=\"void\"></div>\n      <footer>\n        Robots lovingly{\" \"}\n        <span aria-label=\"heart\" role=\"img\">\n          🖤\n        </span>{\" \"}\n        delivered by{\" \"}\n        <a href=\"https://robohash.org\" target=\"_blank\" rel=\"noreferrer\">\n          Robohash.org\n        </a>\n        .\n        <br /> Created by{\" \"}\n        <a\n          href=\"https://github.com/skotancilar\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          kotancilar\n        </a>{\" \"}\n        .\n      </footer>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}